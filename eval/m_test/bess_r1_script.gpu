import scapy.all as scapy

print 'Adding sink'
sink = Sink()

print 'Adding ports and inc/out modules'
# runtime 1:
# iport_mac: 52:54:01:01:00:01
# oport_mac: 52:54:01:01:00:02
# cport_mac: 52:54:01:01:00:03
rt1_iport = ZeroCopyVPort(name='rt1_iport')
rt1_oport = ZeroCopyVPort(name='rt1_oport')
rt1_cport = ZeroCopyVPort(name='rt1_cport')

rt1_iport_portinc::PortInc(port=rt1_iport)
rt1_iport_portout::PortOut(port=rt1_iport)
rt1_oport_portinc::PortInc(port=rt1_oport)
rt1_oport_portout::PortOut(port=rt1_oport)
rt1_cport_portinc::PortInc(port=rt1_cport)
rt1_cport_portout::PortOut(port=rt1_cport)


print 'Adding traffic generator module'
pkt_size = int($SN_PKT_SIZE!'60')
assert(60 <= pkt_size <= 1522)

eth = scapy.Ether(src='02:1e:67:9f:4d:ae', dst='06:16:3e:1b:72:32')
ip = scapy.IP(src='10.0.0.1', dst='10.0.0.2')   # dst IP is overwritten
tcp = scapy.TCP(sport=10001, dport=80)
payload = ('hello' + '0123456789' * 200)[:pkt_size-len(eth/ip/tcp)]
pkt = eth/ip/tcp/payload
pkt_data = bytearray(str(pkt))
fg1::MyFlowGen(template=pkt_data, flow_arrival_interval=500, flow_pps=20, flow_duration=3600, concurrent_flows=50000)


